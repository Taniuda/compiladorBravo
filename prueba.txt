// esto es un comentario...





console.writeline("Literal de Cadena");
console.writeline(identificador);
console.writeline("texto", var);







if(variable == 5){
    // bloque de codigo
}

if(variable != 5){
    // condicion #1
} else {
    // extra
}

if(variable <= 5){
    // condicion #1
} else if (variable >= 5) {
    // condicion #2
} else {
    // extra
}








while(variable > 5){
    // bloque de codigo
}

// ESTA YA ME SALE
do {
    // bloque de codigo
} while(variable > 5);









for(i = 0; i < 5; i++){
    // bloque de codigo
}

for(int i = 0; i < 5; i++){
    // bloque de codigo
}







switch(opc){
    case 1 :
        // codigo #1
        break;
    case 2 : 
        // codigo #2
}

switch(opc){
    case 1 :
        // codigo #1
        break;
    case 2 : 
        // codigo #2
        break;
    case 3 : 
        // codigo #3
        break;
    default :
        // codigo x
}








//checked garantiza que cualquier operación que cause un overflow arrojará una excepción en lugar de permitir el "wrap-around".
//unchecked permite que las operaciones de desbordamiento (overflow) no arrojen excepciones.


unchecked{
    //comentario
}

checked{
    //comentario
}







try{
    //comentario
} catch(Exception ex){
    //comentario
}

try{
    //comentario
} catch(IndexOutOfRangeException c){
    //comentario
}





//declaracion de variable

int variable1;
double variable2;
string variable3;
bool variable4;

int variable_entera = 5;
double variable_decimal = 2.5;
string variable_texto = "Hola mundo";
bool variable_boleana = false;




// LO DEJO PENDIENTE-----------------------------------------
// declaracion de arreglo
int[] arregloInt = { 1, 2, 3, 4, 5 };
string[] arregloStr = { "Hola", "Mundo" };
double[] arregloDou = { 1.2, 3.4, 5.6 };
bool[] arregloBoo = { true, false, true, true };


// LO DEJO PENDIENTE-----------------------------------------
// asignacion de variable

x = "Hola ";
y = "Mundo"
z = x + y;
A = (5 + id3 + var)/3;
B = console.readline(); 
C = numeros.length;






















